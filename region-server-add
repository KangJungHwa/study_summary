https://docs.cloudera.com/HDPDocuments/HDP3/HDP-3.0.1/administration/content/add-hbase-region-server.html
https://stackoverflow.com/questions/23686387/hadoop-and-hbase-rebalancing-after-node-additions
https://learnhbase.net/2013/03/02/hbase-shell-commands/

dfs.datanode.balance.bandwidthPerSec
부수적인 설정이지만, HDFS의 Datanode간의 load balancing이 일어나는 속도를 제한하는 설정입니다.
기본값은 1MB/sec로 되어 있지만, 계속해서 Datanode를 추가하거나 제거하는 경우에는 
기본값으로는 너무 느릴 때가 있습니다. 저희는 10MB/sec 정도로 늘려서 사용하고 있습니다.


161. 지역 관리
161.1. 주요 다짐
HBase 쉘 또는 Admin.majorCompact 를 통해 주요 압축을 요청할 수 있습니다 .

참고 : 주요 압축은 영역 병합을 수행하지 않습니다. 압축에 대한 자세한 내용은 압축 을 참조하십시오 .

161.2. 병합
병합은 동일한 테이블에서 인접한 영역을 병합 할 수있는 유틸리티입니다 (org.apache.hadoop.hbase.util.Merge 참조).

$ bin/hbase org.apache.hadoop.hbase.util.Merge <tablename> <region1> <region2>
영역이 너무 많다고 생각하고 통합하려는 경우 병합이 필요한 유틸리티입니다. 클러스터가 다운되면 병합을 실행해야합니다. 
사용 예 는 O'Reilly HBase Book 을 참조하십시오 .

이 애플리케이션에 3 개의 매개 변수를 전달해야합니다. 첫 번째는 테이블 이름입니다. 
두 번째는 "table_name, \ x0A, 1342956111995.7cef47f192318ba7ccc75b1bbf27a82b"와 같이 병합 할 첫 번째 영역의 정규화 된 이름입니다. 
세 번째는 두 번째 리전이 병합 할 정규화 된 이름입니다.

또한 지역 병합을 위해 HBASE-1621 에 Ruby 스크립트가 첨부되어 있습니다.

162. 노드 관리
162.1. 노드 해체
특정 노드의 HBase 디렉토리에서 다음 스크립트를 실행하여 개별 RegionServer를 중지 할 수 있습니다.

$ ./bin/hbase-daemon.sh 리젼 서버 중지
RegionServer는 먼저 모든 리젼을 닫은 후 자체 종료됩니다. 종료시 ZooKeeper에있는 RegionServer의 임시 노드가 만료됩니다. 
마스터는 RegionServer가 사라진 것을 확인하고이를 '크래쉬 된'서버로 취급합니다. RegionServer가 수행 한 노드를 다시 지정합니다.

노드를 해제하기 전에로드 밸런서 비활성화
노드가 종료되는 동안로드 밸런서가 실행되면로드 밸런서와 해지 된 RegionServer의 마스터 복구 사이에 경합이있을 수 있습니다. 
밸런서를 먼저 비활성화하여 문제를 피하십시오. 아래의 lb를 참조하십시오 .

킬 노드 도구
HBase를-2.0, bin 디렉토리에, 우리라는 이름의 스크립트를 추가 considerAsDead.sh regionserver을 죽이는 데 사용 할 수 있습니다. 
사육사 시간 초과가 만료되기 전에 특수한 모니터링 도구로 하드웨어 문제를 감지 할 수 있습니다. 
considerAsDead.sh는 죽은로 RegionServer을 표시하는 간단한 기능입니다. 서버의 모든 znode를 삭제하고 복구 프로세스를 시작합니다.
스크립트를 모니터링 / 결함 감지 도구에 연결하여 더 빠른 장애 조치를 시작하십시오. 이 파괴적인 도구를 어떻게 사용하는지주의하십시오.
hbase-2.0 이전의 hbase 버전에서 스크립트를 사용해야하는 경우 스크립트를 복사하십시오.

위의 RegionServer 중지의 단점은 리전이 오랫동안 오프라인 상태 일 수 있다는 것입니다. 지역은 순서대로 닫힙니다. 
서버의 많은 region이있는 경우, 모든 region이 닫힐 때까지 그리고 마스터가 RegionServer의 znode가 
없어진 것을 알기 전까지 닫는 첫 번째 region이 온라인으로 돌아 오지 않을 수 있습니다. Apache HBase 0.90.2에서는 
노드의로드를 점진적으로 줄인 다음 자체적으로 종료하는 기능이 추가되었습니다. Apache HBase 0.90.2는 graceful_stop.sh 스
크립트를 추가했습니다 . 사용법은 다음과 같습니다.

$ ./bin/graceful_stop.sh
사용법 : graceful_stop.sh [--config & conf-dir>] [--restart] [--reload] [--thrift] [--rest] & hostname>
 중고품 중지 / 시작 전 / 후에 중고품을 중지 / 시작해야하는 경우
 휴식 hbase 정지 / 시작 전 / 후 휴식을 중지 / 시작해야하는 경우
 정상 정지 후 다시 시작해야하는 경우
 다시로드 오프로드 된 영역을 중지 된 서버로 다시 이동
 디버그 오프로드 된 영역을 중지 된 서버로 다시 이동
 hostname 중지 할 서버의 호스트 이름
로드 된 RegionServer를 해제하려면 다음을 실행하십시오. $ ./bin/graceful_stop.sh HOSTNAME 여기서는 
HOSTNAME해제 할 RegionServer를 가지고있는 호스트입니다.

의 위에 HOSTNAME
HOSTNAME에 전달 graceful_stop.sh은 HBase를가 RegionServers를 식별하기 위해 사용하고있는 호스트 이름과 일치해야합니다. 
HBase가 서버를 참조하는 방법에 대해서는 마스터 UI에서 RegionServer 목록을 확인하십시오. 일반적으로 호스트 이름이지만 
FQDN 일 수도 있습니다. HBase가 무엇을 사용하든 이것이 graceful_stop.sh 해제 스크립트를 전달해야합니다 . 
IP를 전달하면 스크립트가 아직 호스트 이름 (또는 FQDN)을 만들 정도로 똑똑하지 않으므로 서버가 현재 실행 중인지 확인할 때 실패합니다. 
영역의 우아한 언로드가 실행되지 않습니다.

graceful_stop.sh의 스크립트는 지역 이탈을 최소화하기 위해 한 번에 해제 된 RegionServer 하나 해제 지역을 이동합니다. 
해체 된 서버가 0 영역을 전달할 때까지 다음 영역을 이동하기 전에 새 위치에 배포 된 영역을 확인합니다. 이 시점에서 graceful_stop.sh 는 
RegionServer에 알려줍니다 stop. 이 시점에서 마스터는 RegionServer가 사라졌지 만 모든 리전이 이미 재배치되었으며 RegionServer가 완전히 
다운되었으므로 분할 할 WAL 로그가 없습니다.

로드 밸런서
graceful_stop스크립트가 실행되는 동안 리전로드 밸런서가 비활성화 된 것으로 가정합니다 (그렇지 않으면 밸런서 및 서비스 
해제 스크립트가 리전 배치와 싸우게됩니다). 밸런서를 비활성화하려면 셸을 사용하십시오.

hbase(main):001:0> balance_switch false
true
0 row(s) in 0.3590 seconds
밸런서가 꺼집니다. 다시 활성화하려면 다음을 수행하십시오.

hbase(main):001:0> balance_switch true
false
0 row(s) in 0.3590 seconds
는 graceful_stop균형을 확인하고 활성화 된 경우이 작업에 들어가기 전에, 그것을 꺼집니다. 오류로 인해 조기에 종료되면 밸런서가 
재설정되지 않습니다. 따라서 graceful_stopgraceful_stop을 수행 한 후 밸런서를 다시 활성화하는 것 외에도 밸런서를 관리하는 것이 좋습니다 .

162.1.1. 여러 리젼 서버를 동시에 폐기
클러스터가 큰 경우 여러 RegionServer를 동시에 중지하여 한 번에 둘 이상의 시스템을 해제 할 수 있습니다. 동시에 여러 리젼 
서버를 정상적으로 드레인하기 위해 RegionServer를 "드레인"상태로 만들 수 있습니다. 이것은 hbase_root / 
draining znode 아래에 ZooKeeper에서 항목을 작성하여 RegionServer를 드레인 노드로 표시하여 수행됩니다 . 
이 znode는 hbase_root / rs znode name,port,startcode의 regionserver 항목과 같은 형식을 갖습니다.

이 기능이 없으면 한 지역 서버에서 배출되는 지역이 다른 지역 서버로 이동할 수도 있기 때문에 여러 노드를 폐기하는 것이 적합하지 않을 수 있습니다.
RegionServer를 배수 상태로 표시하면이 문제가 발생하지 않습니다. 자세한 내용은이 블로그 게시물 을 참조하십시오.

162.1.2. 디스크가 고장 나거나 고장 남
디스크 플레인이 죽는 경우 머신 당 디스크 수가 적당 하면 dfs.datanode.failed.volumes.tolerated 세트를 사용하는 것이 좋습니다 . 
그러나 일반적으로 디스크는 "John Wayne"을 수행합니다. 즉, dmesg 에서 spewing 오류를 줄이는 데 시간이 걸리  거나 어떤 이유로 든 동료보다
느리게 실행됩니다. 이 경우 디스크를 해제하려고합니다. 두 가지 옵션이 있습니다. 데이터 노드를 해제 할 수 있습니다또는 불량 디스크
데이터 만 복제되고, 데이터 노드를 중지하고, 잘못된 볼륨을 마운트 해제 할 수 있으며 (데이터 노드가 데이터 볼륨을 사용하는 동안 볼륨을 
마운트 해제 할 수 없음) 데이터 노드를 다시 시작한다는 점에서 방해가되지 않습니다 (설정 한 것으로 가정) dfs.datanode.failed.volumes.tolerated> 0). 리전 서버는 데이터를 가져 오는 위치를 재 보정 할 때 로그에 약간의 오류가 발생합니다. WAL 로그도 롤할 가능성이 있지만 일반적으로 대기 시간이 급증하는 경우에는 계속해서 변경해야합니다.

단락 읽기
단락 읽기를 수행하는 경우 데이터 노드를 중지하기 전에 리젼 서버에서 리젼을 이동해야합니다. chmod를 사용하여 지역 서버가 액세스 할 수는 없지만 단락 읽기는 이미 파일이 열려 있기 때문에 데이터 노드가 다운 되어도 불량 디스크에서 파일 블록을 계속 읽을 수 있습니다. 데이터 노드를 다시 시작한 후 영역을 다시 이동하십시오.

162.2. 롤링 재시작
일부 클러스터 구성 변경 사항은 변경 사항을 적용하기 위해 전체 클러스터 또는 RegionServer를 다시 시작해야합니다. 또한 마이너 또는 유지 보수 릴리스로 업그레이드하고 가능하면 주 릴리스로 롤링 재시작을 지원합니다. 롤링 업그레이드 수행 기능에 대한 제한 사항은 업그레이드하려는 릴리스의 릴리스 정보를 참조하십시오.

상황에 따라 여러 가지 방법으로 클러스터 노드를 다시 시작할 수 있습니다. 이러한 방법은 아래에 자세히 설명되어 있습니다.

162.2.1. rolling-restart.sh스크립트 사용
HBase에는 bin / rolling-restart.sh 스크립트가 제공되어 전체 클러스터, 마스터 또는 RegionServer에서만 롤링 재시작을 수행 할 수 있습니다. 스크립트는 자신의 스크립트에 대한 템플릿으로 제공되며 명시 적으로 테스트되지 않습니다. 암호가없는 SSH 로그인을 구성해야하며 tarball을 사용하여 배포 한 것으로 가정합니다. 스크립트를 실행하기 전에 일부 환경 변수를 설정해야합니다. 스크립트를 검사하고 필요에 맞게 수정하십시오.

rolling-restart.sh 일반 사용법
$ ./bin/rolling-restart.sh --help
사용법 : rolling-restart.sh [--config <hbase-confdir>] [--rs-only] [--master-only] [--graceful] [--maxthreads xx]
RegionServer에서만 롤링 재시작
RegionServer에서만 롤링 재시작을 수행하려면 --rs-only옵션을 사용하십시오 . 개별 RegionServer를 재부팅해야하거나 
다른 HBase 프로세스가 아닌 RegionServer에만 영향을주는 구성을 변경하는 경우 필요할 수 있습니다.

마스터에서만 롤링 재시작
활성 및 백업 마스터에서 롤링 재시작을 수행하려면 --master-only옵션을 사용하십시오 . 구성 변경이 RegionServer가 
아닌 Master에만 영향을 미치거나 활성 Master가 실행중인 서버를 다시 시작해야하는 경우이를 사용할 수 있습니다.

정상적으로 다시 시작
--graceful옵션 을 지정하면 bin / graceful_stop.sh 스크립트를 사용하여 RegionServer를 다시 시작합니다.이 
스크립트는 Region을 다시 시작하기 전에 Region을 RegionServer 밖으로 이동시킵니다. 이것은 더 안전하지만 재시작을 지연시킬 수 있습니다.

스레드 수 제한
특정 수의 스레드 만 사용하도록 롤링 재시작을 제한하려면 --maxthreads옵션을 사용하십시오 .

162.2.2. 수동 롤링 재시작
프로세스를보다 강력하게 제어하려면 클러스터에서 롤링 재시작을 수동으로 수행 할 수 있습니다. 이것은 decommissiongraceful-stop.sh 명령을 사용합니다 . 이 방법에서는 각 RegionServer를 개별적으로 다시 시작한 다음 이전 지역을 다시 제자리로 이동하여 지역성을 유지할 수 있습니다. 마스터를 다시 시작해야하는 경우이 방법을 사용하여 리젼 서버를 다시 시작하기 전에 마스터를 다시 시작하고 마스터를 다시 시작해야합니다. 다음은 그러한 명령의 예입니다. 환경에 맞게 조정해야 할 수도 있습니다. 이 스크립트는 RegionServer의 롤링 재시작 만 수행합니다. 영역을 이동하기 전에로드 밸런서를 비활성화합니다.

`cat conf / regionservers | sort`에서 i의 $; ./bin/graceful_stop.sh --restart --reload --debug $ i; 완료 &> /tmp/log.txt &;
/tmp/log.txt 파일 의 출력을 모니터하여 스크립트 진행 상황을 따르십시오.

162.2.3. 자신의 롤링 재시작 스크립트 작성을위한 논리
자체 롤링 재시작 스크립트를 작성하려면 다음 지침을 사용하십시오.

새 릴리스를 추출하고 구성을 확인한 rsync후 scp, 또는 다른 보안 동기화 메커니즘을 사용하여 클러스터의 모든 노드에 동기화하십시오.

먼저 마스터를 다시 시작하십시오. 새 HBase 디렉토리가 이전 디렉토리와 다른 경우 (예 : 업그레이드) 이러한 명령을 수정해야 할 수도 있습니다.

$ ./bin/hbase-daemon.sh 정지 마스터; ./bin/hbase-daemon.sh 시작 마스터
마스터에서 다음과 같은 스크립트를 사용하여 각 RegionServer를 정상적으로 다시 시작하십시오.

`cat conf / regionservers | sort`에서 i의 $; ./bin/graceful_stop.sh --restart --reload --debug $ i; 완료 &> /tmp/log.txt &
Thrift 또는 REST 서버를 실행중인 경우 --thrift 또는 --rest 옵션을 전달하십시오. 사용 가능한 다른 옵션을 보려면 bin/graceful-stop.sh --help 명령을 실행하십시오 .

여러 RegionServer를 다시 시작할 때 HBase 영역을 천천히 배출하는 것이 중요합니다. 그렇지 않으면 여러 리전이 동시에 오프라인 상태가되고 다른 노드에 다시 할당해야하며이 상태는 곧 오프라인 상태가 될 수도 있습니다. 이는 성능에 부정적인 영향을 줄 수 있습니다. 예를 들어와 같은 셸 명령을 추가하여 위 스크립트에 지연을 삽입 할 수 있습니다 sleep. 각 RegionServer가 다시 시작될 때까지 5 분 동안 대기하려면 위 스크립트를 다음과 같이 수정하십시오.

`cat conf / regionservers | sort`에서 i의 $; ./bin/graceful_stop.sh --restart --reload --debug $ i & sleep 5m; 완료 &> /tmp/log.txt &
사용 불능 서버 목록을 지우고로드 밸런서를 다시 활성화하려면 마스터를 다시 시작하십시오.

162.3. 새 노드 추가
HBase에 새 리젼 서버를 추가하는 것은 본질적으로 무료입니다. 간단히 다음 $ ./bin/hbase-daemon.sh start regionserver과 같이 시작 하면 마스터에 자체 등록됩니다. RS가 결국 로컬 파일을 가질 수 있도록 동일한 머신에서 DataNode를 시작하는 것이 이상적입니다. ssh를 사용하여 데몬을 시작 하는 경우 마스터의 conf / regionservers 에 새 호스트 이름을 추가해야합니다 .

현재 리전 서버는 아직 이동 한 리전이 없기 때문에 데이터를 제공하지 않습니다. 밸런서가 활성화되면 영역이 새 RS로 이동하기 시작합니다. 소규모 / 중형 클러스터에서는 많은 지역이 동시에 오프라인 상태이므로 대기 시간에 매우 부정적인 영향을 줄 수 있습니다. 따라서 노드를 해제 할 때와 같은 방식으로 밸런서를 비활성화하고 영역을 수동으로 (또는 더 나은 방식으로 하나씩 이동시키는 스크립트를 사용하여) 이동시키는 것이 좋습니다.

이동 된 리전은 모두 0 %의 로컬 성을 가지며 캐시에 블록이 없으므로 리전 서버는 네트워크를 사용하여 요청을 처리해야합니다. 대기 시간이 길어질뿐만 아니라 모든 네트워크 카드 용량을 사용할 수도 있습니다. 실제적인 목적으로 표준 1GigE NIC는 100MB / s 이상을 읽을 수 없습니다 . 이 경우 또는 OLAP 환경에 있고 로컬 성이 필요한 경우 이동 된 영역을 크게 압축하는 것이 좋습니다.
